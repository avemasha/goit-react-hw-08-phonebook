{"version":3,"file":"static/js/104.6130cd03.chunk.js","mappings":"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","sources":["components/PhonebookForm/PhonebookForm.styled.js","components/PhonebookForm/PhonebookForm.jsx","components/Contacts/ContactsList.styled.js","components/Contacts/ContactItem.styled.js","components/Contacts/ContactItem.jsx","components/Contacts/ContactsList.jsx","components/Filter/FilterForm.styled.js","components/Filter/FilterForm.jsx","components/MainTitle/MainTitle.styled.js","components/MainTitle/MainTitle.jsx","components/SectionWithTitle/SectionWithTitle.styled.js","components/SectionWithTitle/SectionWithTitle.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const ErMessage = styled(ErrorMessage)`\n  font-size: 15px;\n  font-weight: bold;\n  color: rgb(201, 49, 42);\n`;\n\nexport const Input = styled(Field)`\nmargin-top: 5px;\n    padding: 3px 6px;\n   border: 1px solid rgba(0, 0, 0, 0.868);\n`\nexport const Label = styled.label`\ndisplay: flex;\nflex-direction: column;\n margin-top: 10px;\n\n &:not(:last-of-type){\n    margin-bottom: 15px;\n }\n`\n\nexport const Forma = styled(Form)`\nborder: 2px solid #161373;\n   width: 300px;\n    padding: 10px 60px 10px 5px;\n`\n\nexport const Button = styled.button`\nbackground-color: #5968c7;\n  border-color: #161373;\n   border: 50;\n color: white;\n margin-top: 10px;\n`\nexport const Title = styled.h1`\n  font-size: 35px;\n  font-weight: bold;\n  text-transform: uppercase;\n  color: #135600;\n  text-align: center;\n  text-decoration: underline;\n  `","import { useDispatch, useSelector } from 'react-redux';\nimport { addContacts } from 'redux/operations';\nimport { Formik } from 'formik';\nimport { Notify } from 'notiflix';\nimport { Input, Forma, Label, Button, ErMessage } from './PhonebookForm.styled';\nimport { selectContacts } from 'redux/selectors';\n\nconst formValues = {\n  name: '',\n  phone: '',\n};\n\nexport const PhonebookForm = () => {\n  const dispatch = useDispatch();\nconst contacts = useSelector(selectContacts);\n\nconst isContactExists = (newContact) => {\n  return contacts.some(\n    (contact) =>\n      contact.name.toLowerCase() === newContact.name.toLowerCase() ||\n      contact.phone === newContact.phone\n  );\n};\n\n  const handleSubmit = (values, { resetForm }) => {\n    if (isContactExists(values)) {\n      Notify.warning\n      ('Contact with the same name or phone number already exists!');\n    } else {\n      dispatch(addContacts(values));\n    }\n\n    resetForm();\n  };\n\n  return (\n    <Formik initialValues={formValues} onSubmit={handleSubmit}>\n      <Forma autoComplete=\"off\">\n        <Label htmlFor=\"name\">\n          Name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n          <ErMessage name=\"name\" component=\"p\" />\n        </Label>\n        <Label htmlFor=\"number\">\n          Number\n          <Input\n            type=\"tel\"\n            name=\"phone\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n          <ErMessage name=\"phone\" component=\"p\" />\n        </Label>\n        <Button type=\"submit\">Add contact</Button>\n      </Forma>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\nlist-style: none\n`","\n\nimport styled from 'styled-components';\n\nexport const Item = styled.li`\n \n \n  text-transform: uppercase;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: 10px;\n  \n\n  \n\n`\nexport const Button = styled.button`\nmargin-left: 10px;\nbackground-color: #5968C7;\ncolor: white;\npadding: 5px 10px;\n  cursor: pointer;\n\n`\n\n","import { Item, Button } from './ContactItem.styled';\nimport { useDispatch } from 'react-redux';\n\nimport { deleteContact } from 'redux/operations';\n\nexport const ContactItem = ({ id, name, number }) => {\n    const dispatch = useDispatch();\n    return (\n      <Item>\n       <span>{name}</span>:<span>{number}</span>\n        <Button onClick={() => dispatch(deleteContact(id))} type=\"button\">\n          Delete\n        </Button>\n      </Item>\n    );\n  };","import { useDispatch, useSelector } from 'react-redux';\n\nimport { List } from './ContactsList.styled';\n\nimport { ContactItem } from './ContactItem';\n\nimport { selectVisibleContacts } from 'redux/selectors';\n\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/operations';\n\nexport const ContactsList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <List>\n      {contacts.map(state => {\n        return (\n          <ContactItem\n            name={state.name}\n            key={state.id}\n            number={state.phone}\n            id={state.id}\n          />\n        );\n      })}{' '}\n    </List>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\nmargin-top: 0;\n    margin-bottom: 0;\n    margin-top: 15px;\n    display: flex;\n    flex-direction: column;\n    \n    \n`\nexport const Input = styled.input`\nborder-color: black;\n\n`\n","import { useSelector, useDispatch } from 'react-redux';\nimport { selectFilter } from 'redux/selectors';\n\nimport { changeFilter } from 'redux/filterSlice';\nimport { Input, Label } from './FilterForm.styled';\n\nexport const FilterForm = () => {\n  const value = useSelector(selectFilter);\n\n  const dispatch = useDispatch();\n\n  const onChange = event => {\n    const normalizedValue = event.target.value.toLowerCase();\n\n    dispatch(changeFilter(normalizedValue));\n  };\n\n  return (\n    <Label>\n      Enter contact name\n      <Input type=\"text\" value={value} onChange={onChange}></Input>\n    </Label>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  text-transform: uppercase;\n  font-size: 40px;\n  color: blue;\n`;","import { Title } from './MainTitle.styled';\n\nexport const MainTitle = () => {\n  return <Title>Phonebook</Title>;\n};","import styled from 'styled-components';\nexport const Title = styled.h2`\n  text-transform: uppercase;\n  font-size: 30px;\n  color: #303403;\n  text-align: center;\n`;","import { Title } from './SectionWithTitle.styled';\nimport PropTypes from 'prop-types';\nexport const Section = ({ title, children }) => {\n  return (\n    <section>\n      <Title>{title}</Title>\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n};","import { PhonebookForm } from 'components/PhonebookForm/PhonebookForm';\nimport { ContactsList } from 'components/Contacts/ContactsList';\nimport { FilterForm } from 'components/Filter/FilterForm';\nimport { MainTitle } from 'components/MainTitle/MainTitle';\nimport { Section } from 'components/SectionWithTitle/SectionWithTitle';\n\nexport default function Contacts() {\n    return (\n      <div\n        style={{\n          width: '1000px',\n          margin: '0 auto',\n          padding: '0 50px',\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <MainTitle />\n        <PhonebookForm />\n        <FilterForm />\n        <Section title=\"Contacts\">\n          <ContactsList />\n        </Section>\n      </div>\n    );\n  }"],"names":["ErMessage","styled","ErrorMessage","Input","Field","Label","Forma","Form","Button","Title","formValues","name","phone","PhonebookForm","dispatch","useDispatch","contacts","useSelector","selectContacts","initialValues","onSubmit","values","newContact","resetForm","some","contact","toLowerCase","Notify","addContacts","autoComplete","htmlFor","type","pattern","title","required","component","List","Item","ContactItem","id","number","onClick","deleteContact","ContactsList","selectVisibleContacts","useEffect","fetchContacts","map","state","FilterForm","value","selectFilter","onChange","event","normalizedValue","target","changeFilter","MainTitle","Section","children","Contacts","style","width","margin","padding","display","flexDirection","alignItems"],"sourceRoot":""}