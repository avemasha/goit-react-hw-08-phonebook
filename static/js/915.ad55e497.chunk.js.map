{"version":3,"file":"static/js/915.ad55e497.chunk.js","mappings":"4UAIaA,GAAYC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,8FAMTE,GAAQF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,uHAOLI,EAAQJ,EAAAA,GAAAA,MAAH,+IAWLK,GAAQL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAH,6MAULO,EAASP,EAAAA,GAAAA,OAAH,0MAUNQ,EAAQR,EAAAA,GAAAA,GAAH,8L,wHCpCZS,EAAa,CACfC,KAAM,GACNC,MAAO,GACPC,SAAU,IAGCC,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAYjB,OACI,SAAC,KAAD,CAAQC,cAAeP,EAAYQ,SAZlB,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UAC9BL,GACEM,EAAAA,EAAAA,IAAS,CACPV,KAAMQ,EAAOR,KACbC,MAAOO,EAAOP,MACdC,SAAUM,EAAON,YAGrBO,GACD,EAGG,UACE,UAAC,KAAD,CAAOE,aAAa,MAApB,WACE,SAAC,KAAD,wBACA,UAAC,KAAD,CAAOC,QAAQ,OAAf,sBAEE,SAAC,KAAD,CACEC,KAAK,OACLb,KAAK,OACLc,QAAQ,yHACRC,MAAM,wIACNC,UAAQ,KAET,SAAC,KAAD,CAAWhB,KAAK,OAAOiB,UAAU,UAExC,UAAC,KAAD,CAAOL,QAAQ,QAAf,mBAEE,SAAC,KAAD,CAAOC,KAAK,OAAOb,KAAK,QAAQgB,UAAQ,KACxC,SAAC,KAAD,CAAWhB,KAAK,QAAQiB,UAAU,UAEpC,UAAC,KAAD,CAAOL,QAAQ,WAAf,sBAEE,SAAC,KAAD,CACEC,KAAK,WACLb,KAAK,WACLc,QAAQ,yHACRC,MAAM,wIACNC,UAAQ,KAEV,SAAC,KAAD,CAAWhB,KAAK,WAAWiB,UAAU,UAEvC,SAAC,KAAD,CAAQJ,KAAK,SAAb,0BAIP,ECjEKK,EAAS,CACbC,UAAW,CACTC,UAAW,qBACXC,QAAS,OACTC,WAAY,SACZC,eAAgB,UAElBR,MAAO,CACLS,WAAY,IACZC,SAAU,GACVC,UAAW,WAGA,SAASC,IACtB,OACE,gBAAKC,MAAOV,EAAOC,UAAnB,UACE,SAAChB,EAAD,KAGL,C","sources":["components/PhonebookForm/PhonebookForm.styled.js","components/RegisterForm/RegisterForm.jsx","pages/Register/Register.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const ErMessage = styled(ErrorMessage)`\n  font-size: 15px;\n  font-weight: bold;\n  color: rgb(201, 49, 42);\n`;\n\nexport const Input = styled(Field)`\nmargin-top: 5px;\n    padding: 3px 6px;\n   border: 1px solid blue;\n   border-radius: 5px;\n\n`\nexport const Label = styled.label`\ndisplay: flex;\nflex-direction: column;\n margin-top: 10px;\n\n\n &:not(:last-of-type){\n    margin-bottom: 10px;\n }\n`\n\nexport const Forma = styled(Form)`\nborder: 3px solid #161373;\n   width: 300px;\n   border-radius: 5px;\n    padding: 15px 15px 15px 15px;\n    display: flex;\n    flex-direction:column;\n    // align-items:center;\n`\n\nexport const Button = styled.button`\nbackground-color: blue;\n  border-color: navy;\n   border: 50;\n color: white;\n text-transform:uppercase;\n padding: 2px 2px 2px 2px;\n margin-top: 10px;\n border-radius: 5px;\n`\nexport const Title = styled.h1`\n  margin: 0px;\n  font-size: 35px;\n  font-weight: bold;\n  text-transform: uppercase;\n  color: blue;\n  text-align: center;\n  \n  // text-decoration: underline;\n  `","import { useDispatch } from 'react-redux';\nimport { Formik } from 'formik';\nimport {\n  Input,\n  Forma,\n  Label,\n  Button,\n  ErMessage,\n  Title,\n} from '../PhonebookForm/PhonebookForm.styled';\nimport { register } from 'redux/authOperations';\n\nconst formValues = {\n    name: '',\n    email: '',\n    password: '',\n  };\n\n  export const RegisterForm = () => {\n    const dispatch = useDispatch();\n    const handleSubmit = (values, { resetForm }) => {\n      dispatch(\n        register({\n          name: values.name,\n          email: values.email,\n          password: values.password,\n        })\n      );\n      resetForm();\n    };\n\n    return (\n        <Formik initialValues={formValues} onSubmit={handleSubmit}>\n          <Forma autoComplete=\"off\">\n            <Title>Register</Title>\n            <Label htmlFor=\"name\">\n              Username\n              <Input\n                type=\"text\"\n                name=\"name\"\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Not may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                required\n              />\n               <ErMessage name=\"name\" component=\"p\" />\n        </Label>\n        <Label htmlFor=\"email\">\n          Email\n          <Input type=\"text\" name=\"email\" required />\n          <ErMessage name=\"email\" component=\"p\" />\n        </Label>\n        <Label htmlFor=\"password\">\n          Password\n          <Input\n            type=\"password\"\n            name=\"password\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Not may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n          <ErMessage name=\"password\" component=\"p\" />\n        </Label>\n        <Button type=\"submit\">Register</Button>\n      </Forma>\n    </Formik>\n  );\n};","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\nconst styles = {\n  container: {\n    minHeight: 'calc(100vh - 50px)',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: {\n    fontWeight: 500,\n    fontSize: 48,\n    textAlign: 'center',\n  },\n};\nexport default function Register() {\n  return (\n    <div style={styles.container}>\n      <RegisterForm />\n    </div>\n  );\n}"],"names":["ErMessage","styled","ErrorMessage","Input","Field","Label","Forma","Form","Button","Title","formValues","name","email","password","RegisterForm","dispatch","useDispatch","initialValues","onSubmit","values","resetForm","register","autoComplete","htmlFor","type","pattern","title","required","component","styles","container","minHeight","display","alignItems","justifyContent","fontWeight","fontSize","textAlign","Register","style"],"sourceRoot":""}